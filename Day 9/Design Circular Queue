import java.util.Arrays;

class MyCircularQueue {
    int[] q;
    int front, rear, size;

    public MyCircularQueue(int k) {
        q = new int[k];
        Arrays.fill(q, -1);
        front = 0;
        rear = -1;  
        size = 0;
    }

    public boolean enQueue(int value) {
        if (isFull()) {
            return false;
        }
        rear = (rear + 1) % q.length;
        q[rear] = value;
        size++;
        return true;
    }

    public boolean deQueue() {
        if (isEmpty()) {
            return false;
        }
        q[front] = -1;
        front = (front + 1) % q.length;
        size--;
        return true;
    }

    public int Front() {
        if (isEmpty()) return -1;
        return q[front];
    }

    public int Rear() {
        if (isEmpty()) return -1;
        return q[rear];
    }

    public boolean isEmpty() {
        return size == 0;
    }

    public boolean isFull() {
        return size == q.length;
    }
}
